{"name": "Проверяем, что после оформления заказа его номер появляется в разделе 'В работе'", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (104,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31", "trace": "self = <tests.test_order_page.TestOrderPage object at 0x1112727e0>\ndriver = <selenium.webdriver.firefox.webdriver.WebDriver (session=\"204d046b-12d8-4bc1-9610-57d5ddf8f5fa\")>\n\n    @allure.title(\"Проверяем, что после оформления заказа его номер появляется в разделе 'В работе'\")\n    def test_displaying_order_in_process(self, driver):\n        #  авторизовываем пользователя\n        login_user = AccountPage(driver)\n        login_user.click_on_account_button()\n        login_user.wait_visibility_of_login_text()\n        login_user.send_keys_to_email_input_in_account()\n        login_user.send_keys_to_password_input_in_account()\n        login_user.click_on_login_button()\n        login_user.wait_visibility_of_burger_text()\n        #  создаем новый заказ\n        make_order = MainPage(driver)\n>       make_order.click_on_constructor_button()\n\ntests/test_order_page.py:121: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:10: in click_on_constructor_button\n    self.click_on_element(MainPageLocators.CONSTRUCTOR_BUTTON)\npages/base_page.py:40: in click_on_element\n    self.driver.find_element(*locator).click()\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1114b82f0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"Element <p class=\\\\\"AppHeader_heade...sys.mjs:205:29\\\\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (104,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nE       Stacktrace:\nE       RemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nE       WebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nE       ElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nE       webdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\nE       interaction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nE       clickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nE       receiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Нажимаем кнопку 'Личный кабинет' на главной странице", "status": "passed", "steps": [{"name": "Кликаем на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//a[@href = \"/account\"]/p[text() = \"Личный Кабинет\"]')"}], "start": 1724189185297, "stop": 1724189185561}], "start": 1724189185297, "stop": 1724189185561}, {"name": "Ждем появление текста 'Вход' на странице личного кабинета", "status": "passed", "steps": [{"name": "Ждем отображение элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//h2[text() = \"Вход\"]')"}], "start": 1724189185561, "stop": 1724189185567}], "start": 1724189185561, "stop": 1724189185567}, {"name": "Заполняем поле 'Email' на странице личного кабинета", "status": "passed", "steps": [{"name": "Вводим значение в поле для ввода", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//label[text() = \"Email\"]/following-sibling::input')"}, {"name": "keys", "value": "'Alena_Rodionova_10_888@mail.ru'"}], "start": 1724189185567, "stop": 1724189185615}], "start": 1724189185567, "stop": 1724189185615}, {"name": "Заполняем поле 'Пароль' на странице личного кабинета", "status": "passed", "steps": [{"name": "Вводим значение в поле для ввода", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//label[text() = \"Пароль\"]/following-sibling::input')"}, {"name": "keys", "value": "'12345Qq'"}], "start": 1724189185615, "stop": 1724189185625}], "start": 1724189185615, "stop": 1724189185626}, {"name": "Нажимаем кнопку 'Войти' на странице личного кабинета", "status": "passed", "steps": [{"name": "Кликаем на элемент", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//button[text() = \"Войти\"]')"}], "start": 1724189185626, "stop": 1724189185856}], "start": 1724189185626, "stop": 1724189185856}, {"name": "Ждем появление текста 'Соберите бургер' на главной странице", "status": "passed", "steps": [{"name": "Ждем отображение элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//h1[text() = \"Соберите бургер\"]')"}], "start": 1724189185856, "stop": 1724189185864}], "start": 1724189185856, "stop": 1724189185864}, {"name": "Нажимаем кнопку 'Конструктор' на главной странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (104,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\n", "trace": "  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/main_page.py\", line 10, in click_on_constructor_button\n    self.click_on_element(MainPageLocators.CONSTRUCTOR_BUTTON)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/base_page.py\", line 40, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Кликаем на элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: Element <p class=\"AppHeader_header__linkText__3q_va ml-2\"> is not clickable at point (104,44) because another element <div class=\"Modal_modal_overlay__x2ZCr\"> obscures it\nStacktrace:\nRemoteError@chrome://remote/content/shared/RemoteError.sys.mjs:8:8\nWebDriverError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:193:5\nElementClickInterceptedError@chrome://remote/content/shared/webdriver/Errors.sys.mjs:337:5\nwebdriverClickElement@chrome://remote/content/marionette/interaction.sys.mjs:177:11\ninteraction.clickElement@chrome://remote/content/marionette/interaction.sys.mjs:136:11\nclickElement@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:205:29\nreceiveMessage@chrome://remote/content/marionette/actors/MarionetteCommandsChild.sys.mjs:85:31\n\n", "trace": "  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/base_page.py\", line 40, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', '//p[text() = \"Конструктор\"]')"}], "start": 1724189185864, "stop": 1724189185867}], "start": 1724189185864, "stop": 1724189185868}], "parameters": [{"name": "driver", "value": "'firefox'"}], "start": 1724189185296, "stop": 1724189185868, "uuid": "b86ab8f1-4159-4121-a008-d326f67df744", "historyId": "7d860a8467b0583a1a14c1b1969a169c", "testCaseId": "816fc8abdefc9f3c710e2f3ab32bdc12", "fullName": "tests.test_order_page.TestOrderPage#test_displaying_order_in_process", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_order_page"}, {"name": "subSuite", "value": "TestOrderPage"}, {"name": "host", "value": "Alenas-MacBook-Pro.local"}, {"name": "thread", "value": "20919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_order_page"}]}