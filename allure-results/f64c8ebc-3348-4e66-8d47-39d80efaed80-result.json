{"name": "Проверяем, что при клике на ингредиент отображается всплывающее окно с деталями, которое закрывается кликом по крестику", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"BurgerIngredient_ingredient__text__yp3dH\">...</p> is not clickable at point (140, 396). Other element would receive the click: <img src=\"https://code.s3.yandex.net/react/code/bun-01.png\" alt=\"Флюоресцентная булка R2-D3\" class=\"BurgerIngredient_ingredient__image__3e-07 ml-4 mr-4\">\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n0   chromedriver                        0x0000000104be1024 cxxbridge1$str$ptr + 1887276\n1   chromedriver                        0x0000000104bd9700 cxxbridge1$str$ptr + 1856264\n2   chromedriver                        0x00000001047e882c cxxbridge1$string$len + 88524\n3   chromedriver                        0x0000000104832020 cxxbridge1$string$len + 389568\n4   chromedriver                        0x000000010483064c cxxbridge1$string$len + 382956\n5   chromedriver                        0x000000010482e878 cxxbridge1$string$len + 375320\n6   chromedriver                        0x000000010482ddc4 cxxbridge1$string$len + 372580\n7   chromedriver                        0x00000001048233a8 cxxbridge1$string$len + 329032\n8   chromedriver                        0x0000000104822e38 cxxbridge1$string$len + 327640\n9   chromedriver                        0x000000010486448c cxxbridge1$string$len + 595500\n10  chromedriver                        0x0000000104821474 cxxbridge1$string$len + 321044\n11  chromedriver                        0x00000001048220e4 cxxbridge1$string$len + 324228\n12  chromedriver                        0x0000000104ba8a08 cxxbridge1$str$ptr + 1656336\n13  chromedriver                        0x0000000104bad464 cxxbridge1$str$ptr + 1675372\n14  chromedriver                        0x0000000104b8e8ec cxxbridge1$str$ptr + 1549556\n15  chromedriver                        0x0000000104badc14 cxxbridge1$str$ptr + 1677340\n16  chromedriver                        0x0000000104b805fc cxxbridge1$str$ptr + 1491460\n17  chromedriver                        0x0000000104bcaa5c cxxbridge1$str$ptr + 1795684\n18  chromedriver                        0x0000000104bcabd8 cxxbridge1$str$ptr + 1796064\n19  chromedriver                        0x0000000104bd9334 cxxbridge1$str$ptr + 1855292\n20  libsystem_pthread.dylib             0x000000018044af94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000180445d34 thread_start + 8", "trace": "self = <tests.test_main_page.TestMainPage object at 0x1112708f0>, driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"f4967420f68d8da116234608cc921767\")>\n\n    @allure.title(\"Проверяем, что при клике на ингредиент отображается всплывающее окно с деталями, \"\n                  \"которое закрывается кликом по крестику\")\n    def test_ingredient_details_modal(self, driver):\n        ingredient_details_modal = MainPage(driver)\n        ingredient_details_modal.wait_visibility_of_burger_text()\n>       ingredient_details_modal.click_on_ingredient()\n\ntests/test_main_page.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/main_page.py:22: in click_on_ingredient\n    self.click_on_element(MainPageLocators.INGREDIENT_ELEMENT)\npages/base_page.py:40: in click_on_element\n    self.driver.find_element(*locator).click()\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x1114bba10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...00018044af94 _pthread_start + 136\\\\n21  libsystem_pthread.dylib             0x0000000180445d34 thread_start + 8\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"BurgerIngredient_ingredient__text__yp3dH\">...</p> is not clickable at point (140, 396). Other element would receive the click: <img src=\"https://code.s3.yandex.net/react/code/bun-01.png\" alt=\"Флюоресцентная булка R2-D3\" class=\"BurgerIngredient_ingredient__image__3e-07 ml-4 mr-4\">\nE         (Session info: chrome=127.0.6533.120)\nE       Stacktrace:\nE       0   chromedriver                        0x0000000104be1024 cxxbridge1$str$ptr + 1887276\nE       1   chromedriver                        0x0000000104bd9700 cxxbridge1$str$ptr + 1856264\nE       2   chromedriver                        0x00000001047e882c cxxbridge1$string$len + 88524\nE       3   chromedriver                        0x0000000104832020 cxxbridge1$string$len + 389568\nE       4   chromedriver                        0x000000010483064c cxxbridge1$string$len + 382956\nE       5   chromedriver                        0x000000010482e878 cxxbridge1$string$len + 375320\nE       6   chromedriver                        0x000000010482ddc4 cxxbridge1$string$len + 372580\nE       7   chromedriver                        0x00000001048233a8 cxxbridge1$string$len + 329032\nE       8   chromedriver                        0x0000000104822e38 cxxbridge1$string$len + 327640\nE       9   chromedriver                        0x000000010486448c cxxbridge1$string$len + 595500\nE       10  chromedriver                        0x0000000104821474 cxxbridge1$string$len + 321044\nE       11  chromedriver                        0x00000001048220e4 cxxbridge1$string$len + 324228\nE       12  chromedriver                        0x0000000104ba8a08 cxxbridge1$str$ptr + 1656336\nE       13  chromedriver                        0x0000000104bad464 cxxbridge1$str$ptr + 1675372\nE       14  chromedriver                        0x0000000104b8e8ec cxxbridge1$str$ptr + 1549556\nE       15  chromedriver                        0x0000000104badc14 cxxbridge1$str$ptr + 1677340\nE       16  chromedriver                        0x0000000104b805fc cxxbridge1$str$ptr + 1491460\nE       17  chromedriver                        0x0000000104bcaa5c cxxbridge1$str$ptr + 1795684\nE       18  chromedriver                        0x0000000104bcabd8 cxxbridge1$str$ptr + 1796064\nE       19  chromedriver                        0x0000000104bd9334 cxxbridge1$str$ptr + 1855292\nE       20  libsystem_pthread.dylib             0x000000018044af94 _pthread_start + 136\nE       21  libsystem_pthread.dylib             0x0000000180445d34 thread_start + 8\n\nvenv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "Ждем появление текста 'Соберите бургер' на главной странице", "status": "passed", "steps": [{"name": "Ждем отображение элемента", "status": "passed", "parameters": [{"name": "locator", "value": "('xpath', '//h1[text() = \"Соберите бургер\"]')"}], "start": 1724189098571, "stop": 1724189098589}], "start": 1724189098571, "stop": 1724189098589}, {"name": "Нажимаем на ингредиент на главной странице", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"BurgerIngredient_ingredient__text__yp3dH\">...</p> is not clickable at point (140, 396). Other element would receive the click: <img src=\"https://code.s3.yandex.net/react/code/bun-01.png\" alt=\"Флюоресцентная булка R2-D3\" class=\"BurgerIngredient_ingredient__image__3e-07 ml-4 mr-4\">\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n0   chromedriver                        0x0000000104be1024 cxxbridge1$str$ptr + 1887276\n1   chromedriver                        0x0000000104bd9700 cxxbridge1$str$ptr + 1856264\n2   chromedriver                        0x00000001047e882c cxxbridge1$string$len + 88524\n3   chromedriver                        0x0000000104832020 cxxbridge1$string$len + 389568\n4   chromedriver                        0x000000010483064c cxxbridge1$string$len + 382956\n5   chromedriver                        0x000000010482e878 cxxbridge1$string$len + 375320\n6   chromedriver                        0x000000010482ddc4 cxxbridge1$string$len + 372580\n7   chromedriver                        0x00000001048233a8 cxxbridge1$string$len + 329032\n8   chromedriver                        0x0000000104822e38 cxxbridge1$string$len + 327640\n9   chromedriver                        0x000000010486448c cxxbridge1$string$len + 595500\n10  chromedriver                        0x0000000104821474 cxxbridge1$string$len + 321044\n11  chromedriver                        0x00000001048220e4 cxxbridge1$string$len + 324228\n12  chromedriver                        0x0000000104ba8a08 cxxbridge1$str$ptr + 1656336\n13  chromedriver                        0x0000000104bad464 cxxbridge1$str$ptr + 1675372\n14  chromedriver                        0x0000000104b8e8ec cxxbridge1$str$ptr + 1549556\n15  chromedriver                        0x0000000104badc14 cxxbridge1$str$ptr + 1677340\n16  chromedriver                        0x0000000104b805fc cxxbridge1$str$ptr + 1491460\n17  chromedriver                        0x0000000104bcaa5c cxxbridge1$str$ptr + 1795684\n18  chromedriver                        0x0000000104bcabd8 cxxbridge1$str$ptr + 1796064\n19  chromedriver                        0x0000000104bd9334 cxxbridge1$str$ptr + 1855292\n20  libsystem_pthread.dylib             0x000000018044af94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000180445d34 thread_start + 8\n\n", "trace": "  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/main_page.py\", line 22, in click_on_ingredient\n    self.click_on_element(MainPageLocators.INGREDIENT_ELEMENT)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/base_page.py\", line 40, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "Кликаем на элемент", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <p class=\"BurgerIngredient_ingredient__text__yp3dH\">...</p> is not clickable at point (140, 396). Other element would receive the click: <img src=\"https://code.s3.yandex.net/react/code/bun-01.png\" alt=\"Флюоресцентная булка R2-D3\" class=\"BurgerIngredient_ingredient__image__3e-07 ml-4 mr-4\">\n  (Session info: chrome=127.0.6533.120)\nStacktrace:\n0   chromedriver                        0x0000000104be1024 cxxbridge1$str$ptr + 1887276\n1   chromedriver                        0x0000000104bd9700 cxxbridge1$str$ptr + 1856264\n2   chromedriver                        0x00000001047e882c cxxbridge1$string$len + 88524\n3   chromedriver                        0x0000000104832020 cxxbridge1$string$len + 389568\n4   chromedriver                        0x000000010483064c cxxbridge1$string$len + 382956\n5   chromedriver                        0x000000010482e878 cxxbridge1$string$len + 375320\n6   chromedriver                        0x000000010482ddc4 cxxbridge1$string$len + 372580\n7   chromedriver                        0x00000001048233a8 cxxbridge1$string$len + 329032\n8   chromedriver                        0x0000000104822e38 cxxbridge1$string$len + 327640\n9   chromedriver                        0x000000010486448c cxxbridge1$string$len + 595500\n10  chromedriver                        0x0000000104821474 cxxbridge1$string$len + 321044\n11  chromedriver                        0x00000001048220e4 cxxbridge1$string$len + 324228\n12  chromedriver                        0x0000000104ba8a08 cxxbridge1$str$ptr + 1656336\n13  chromedriver                        0x0000000104bad464 cxxbridge1$str$ptr + 1675372\n14  chromedriver                        0x0000000104b8e8ec cxxbridge1$str$ptr + 1549556\n15  chromedriver                        0x0000000104badc14 cxxbridge1$str$ptr + 1677340\n16  chromedriver                        0x0000000104b805fc cxxbridge1$str$ptr + 1491460\n17  chromedriver                        0x0000000104bcaa5c cxxbridge1$str$ptr + 1795684\n18  chromedriver                        0x0000000104bcabd8 cxxbridge1$str$ptr + 1796064\n19  chromedriver                        0x0000000104bd9334 cxxbridge1$str$ptr + 1855292\n20  libsystem_pthread.dylib             0x000000018044af94 _pthread_start + 136\n21  libsystem_pthread.dylib             0x0000000180445d34 thread_start + 8\n\n", "trace": "  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/pages/base_page.py\", line 40, in click_on_element\n    self.driver.find_element(*locator).click()\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/webdriver.py\", line 354, in execute\n    self.error_handler.check_response(response)\n  File \"/Users/alena/YANDEX_PRACTICUM/PycharmProjects_YandexP/diploma/Diplom_3/venv/lib/python3.12/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "parameters": [{"name": "locator", "value": "('xpath', '//p[contains(@*,\"BurgerIngredient_ingredient\") and text() = \"Флюоресцентная булка R2-D3\"]')"}], "start": 1724189098589, "stop": 1724189099648}], "start": 1724189098589, "stop": 1724189099648}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1724189098570, "stop": 1724189099649, "uuid": "816f8066-5859-49b5-9c54-c0994ff403be", "historyId": "9d8e1842683064d80ee933ac81e20077", "testCaseId": "31f18fe534c6676df8e35fdd197bc6fb", "fullName": "tests.test_main_page.TestMainPage#test_ingredient_details_modal", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_main_page"}, {"name": "subSuite", "value": "TestMainPage"}, {"name": "host", "value": "Alenas-MacBook-Pro.local"}, {"name": "thread", "value": "20919-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_main_page"}]}